name: Terraform CI/CD on AWS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: ./terraform1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.6.6"

    - name: Terraform Init with Backend Config
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init -input=false \
          -backend-config="bucket=terraform-state-dan-vuln" \
          -backend-config="dynamodb_table=terraform-lock-dan-vuln" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Format Check
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform fmt -check

    - name: Terraform Validate
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: Terraform Plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform plan -out=tfplan

    - name: Upload tfplan artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ${{ env.TF_WORKING_DIR }}/tfplan

    - name: Show Plan Summary
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform show -no-color tfplan

  apply:
    name: Terraform Apply
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: ./terraform
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.6.6"

    - name: Download tfplan artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ${{ env.TF_WORKING_DIR }}

    - name: Terraform Init with Backend Config
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init -input=false \
          -backend-config="bucket=terraform-state-dan-vuln" \
          -backend-config="dynamodb_table=terraform-lock-dan-vuln" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Apply
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform apply -auto-approve tfplan
